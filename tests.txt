TODO:

- re-order tests

- maybe better cannonicalization tests

- valid format of dkim keys

- structured header syntax
  - tag length

- http://dkim.org/pipermail/interop/2007q4/000330.html
  - generic tag parsing tests

HOW?
- dkim key size
  - signers must use >= 1024?

NEED CLARIFICATIONS:
- arc sets with missing or invalid i= (ignored or invalid?)  not added to signature?
-? canonicalization for AMS?

TODO SUITE:
- smarter integration of validation & signing tests
- i >= 2 tests

Assume failure + failure != success
VALIDATION TESTS:
  - cv=None
	  * no ARC-Sets 1
		* no ARC-Sets 2
	- cv=Pass
	  - i=1
		  * pass 1
			* pass 2
			* pass 3
			* unknown AS tags(changes signature)
			* dkim AS tags not implemented
			* unknown AMS tags(changes signature)
			* v= AMS tags(changes signature), but should have no other effect
			* a=sha-rsa1(changes signature)
			* a=sha-rsa256
			* canon body changes
			* additional irrelevant header fields
			* whitespace ' : ' h= 1
			* whitespace ' : ' h= 2
			* h= case insensitive
			* AMS b= ignores whitespace
			* bh= ignores whitespace
			* AS b= ignores whitespace
			* AMS duplicate header bottom up
			* AMS non-existant header fields
			* AMS non-existant duplicate header fields
			*? AS t= optional
			*? AMS t= optional
			* duplicate ARC set
			* AMS l= implemented correctly?
			* AS 512 key
			* AS 1024 key
			* AS 2048 key
			* ARC Sets not found at top of message header
			* optional ";" at end of tag-list
			* optional
		- i=2
			* pass 1
			* pass 2
			* pass 3
		- i=3
		  * pass 1
			* pass 2
		-? i=5+
		  * pass 1
			* pass 2
  - cv=Fail
	  - invalid structured header syntax (rfc5322)
		  - ?
	  - invalid or missing i=values
		  - duplicated i= values
			  * duplicated AS i= 1
				* duplicated AMS i= 1
			  * duplicated AS i= 2
				*? missing i= value AS
				*? missing i= value AMS
				*? invalid i= value AS
				*? invalid i= value AMS
      -?-  (anything else?)
		- ARC Set mis-ordered
		  * set 1 before set 2
			* aar wrong place
			* ams & as wrong order
	  - i=1 (all prototyped from cv=Pass, i=1, with single change)
	    - AS cv's not correct
		    * cv1 = Pass
		  	* cv1 = Fail
	    - AMS(1) invalid
			  - tag=value list
			    * duplicate tag
				  * case change on tag key
				  * case change on tag value
				  * add whitespace
					* random semicolon
		  	- invalid a=
				  * NA
					* empty
					* unknkown algorithm(not rsa-sha1 or rsa-sha256)
		  	- invalid b=
				  * NA
					* not base64
					- cant get key or is invalid
					  * no key found
						* not vaild dkim key
					- invalid value
					  * modify signature
						* modified headers
					-? when generating sig, what if there are duplicate headers?  what is ordering?
		  	- invalid bh=
				  * NA
					* not base64
					- invalid value
					  * modify bh value
						* modify body(non-canonically)
		  	- invalid c=
				  * NA
		  	  - non-relaxed canonicalization
					  * simple
						* simple/simple
						* simple/relaxed
						* relaxed/simple
						* relaxed
				  * invalid value
		  	- invalid d=
				  * NA
					* empty
					- invalid format
					  * not valid domain name
						*? international domain not an A-label - Section 2.3 of [RFC5890]
		  	- invalid h=
				  * NA
					* empty
		      * includes AS headers
					* doesn't include FROM
				  * incorrect order (or should this be taken into acount in b= ?)
					* includes AMS
		  	- invalid s=
				  * NA
					* empty
					* invalid format? (anything except empty?)
					*? international selector not an A-label - Section 2.3 of [RFC5890]
		  	- invalid t=
					* empty
					* invalid format
				- obtuse dkim stuff
				  * q= != dns/txt
					- x=
					  * invalid format
						* less than t
				  -? z= (diagnostic field, who cares for now) (dkim-quoted-printable)
					- l=
					  * too long
		  - AS(1) invalid
			  - tag=value list
			    * duplicate tag
				  * case change on tag key
				  * case change on tag value
				  * add whitespace
					* random semicolon
		  	- invalid a= (algorithm)
				  * NA
					* empty
					* unknkown algorithm(not rsa-sha1 or rsa-sha256)
		  	- invalid b= (sig)
				  * NA
					* not base64
					- cant get key or is invalid
					  * no key found
						* not vaild dkim key
					- invalid value
					  * modify signature
						- modified headers
						  - check each header that should be included
							  * AAR(1)
								* AMS(1)
								* ASB(1)
		  	- invalid cv= (chain)
				  * NA
					* invalid value
		  	- invalid d= (domain)
				  * NA
					* empty
					- invalid format
					  * not valid domain name
						*? international domain not an A-label - Section 2.3 of [RFC5890]
		  	- invalid s= (selector)
				  * NA
					* empty
					*? international selector not an A-label - Section 2.3 of [RFC5890]
		  	- invalid t= (timestamp)
				  * empty
				  * invalid format
    - i=2 (all prototyped from cv=Pass, i=2, with single change)
		  - duplicate i= values
			  * duplicate AS i=
				* duplicate AMS i=
		  - AS cv's not correct
        * cv1 = Pass
		  	* cv1 = Fail
			  * cv2 = None
		  	* cv2 = Fail
			- AMS(2) invalid
			  - chose ~3 ways of failing
				  - ?
			- AS(1) invalid
			  * NA
			  - chose ~3 ways of failing
				  - ?
			- AS(2) invalid
			  * NA
			  - chose ~3 ways of failing
				  - ?
		- i=3 (all prototyped from cv=Pass, i=3, with single change)
			  - chose ~2 ways of failing
				  - ?
    - i=5+ (all prototyped from cv=Pass, i=5+, with single change)
        - chose ~1 ways of failing
				  - ?




assume rsa-sha256?
assume signers not adding additional weird tags to AS & AMS
assume no additional headers than ones specified
SIGNING TESTS:
 - valid inputs
   - i=0
	   * simple test case, normal dkim headers
		 * ^^^ + modified AMS headers (?)
		 * ^^^ + message permuted AMS headers
		 * ^^^ + non canon modified body
		 * ^^^ + duplicate headers
		 * ^^^ + canon modified body
		 * ^^^ + case changes for headers
  - i=1
	   * simple test case, normal dkim headers
		 * ^^^ + modified AMS headers (?)
		 * ^^^ + message permuted AMS headers
		 * ^^^ + non canon modified body
		 * ^^^ + duplicate headers
		 * ^^^ + canon modified body
		 * ^^^ + case changes for headers
		 * ^^^ + modified AS headers
     - include VERIFICATION TEST SUITE
	- i=2
	   * simple test case, normal dkim headers
	   - include VERIFICATION TEST SUITE
	- i=3
	   * simple test case, normal dkim headers
	   - include VERIFICATION TEST SUITE
	- i=5+
	   * simple test case, normal dkim headers
     - include VERIFICATION TEST SUITE

 - invalid inputs (duplicate i= )
   * duplicate i=1
	 * duplicate i=1, t(arc seal 1)
	 * duplicate i=2
	 * duplicate i=2, t(arc seal 2)
